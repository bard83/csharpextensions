{
    "name": "csharpextension",
    "displayName": "C# Extension",
    "description": "C# IDE Extension for VSCode",
    "author": "Bard83",
    "license": "MIT",
    "version": "1.10.0",
    "publisher": "bard83",
    "engines": {
        "vscode": "^1.63.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/bard83/csharpextensions"
    },
    "icon": "logo.png",
    "categories": [
        "Programming Languages",
        "Linters",
        "Snippets"
    ],
    "keywords": [
        ".NET",
        "ASP.NET",
        ".NET Core",
        "dotnet"
    ],
    "activationEvents": [
        "onLanguage:csharp"
    ],
    "main": "./dist/extension",
    "contributes": {
        "submenus": [
            {
                "id": "csharpextensions.new",
                "label": "New C#"
            }
        ],
        "commands": [
            {
                "command": "csharpextensions.createClass",
                "title": "Class"
            },
            {
                "command": "csharpextensions.createInterface",
                "title": "Interface"
            },
            {
                "command": "csharpextensions.createEnum",
                "title": "Enum"
            },
            {
                "command": "csharpextensions.createStruct",
                "title": "Struct"
            },
            {
                "command": "csharpextensions.createRecord",
                "title": "Record"
            },
            {
                "command": "csharpextensions.createController",
                "title": "Controller"
            },
            {
                "command": "csharpextensions.createApiController",
                "title": "Api Controller"
            },
            {
                "command": "csharpextensions.createRazorPage",
                "title": "Razor Page"
            },
            {
                "command": "csharpextensions.createUwpPage",
                "title": "UWP Page"
            },
            {
                "command": "csharpextensions.createUwpWindow",
                "title": "UWP Window"
            },
            {
                "command": "csharpextensions.createUwpUserControl",
                "title": "UWP UserControl"
            },
            {
                "command": "csharpextensions.createUwpResourceFile",
                "title": "UWP Resource File"
            },
            {
                "command": "csharpextensions.createXUnitTest",
                "title": "XUnit Test"
            },
            {
                "command": "csharpextensions.createNUnitTest",
                "title": "NUnit Test"
            },
            {
                "command": "csharpextensions.createMSTest",
                "title": "MSTest"
            },
            {
                "command": "csharpextensions.createFromTemplate",
                "title": "Template"
            }
        ],
        "menus": {
            "file/newFile": [
                {
                    "command": "csharpextensions.createFromTemplate",
                    "group": "file",
                    "when": "!virtualWorkspace"
                },
                {
                    "command": "csharpextensions.createClass",
                    "group": "file",
                    "when": "!virtualWorkspace"
                },
                {
                    "command": "csharpextensions.createInterface",
                    "group": "file",
                    "when": "!virtualWorkspace"
                },
                {
                    "command": "csharpextensions.createEnum",
                    "group": "file",
                    "when": "!virtualWorkspace"
                },
                {
                    "command": "csharpextensions.createStruct",
                    "group": "file",
                    "when": "!virtualWorkspace"
                },
                {
                    "command": "csharpextensions.createRecord",
                    "group": "file",
                    "when": "!virtualWorkspace"
                }
            ],
            "csharpextensions.new": [
                {
                    "group": "00_basics@0",
                    "command": "csharpextensions.createClass"
                },
                {
                    "group": "00_basics@1",
                    "command": "csharpextensions.createInterface"
                },
                {
                    "group": "00_basics@2",
                    "command": "csharpextensions.createEnum"
                },
                {
                    "group": "00_basics@3",
                    "command": "csharpextensions.createStruct"
                },
                {
                    "group": "00_basics@4",
                    "command": "csharpextensions.createRecord"
                },
                {
                    "group": "10_mvc@0",
                    "command": "csharpextensions.createController"
                },
                {
                    "group": "10_mvc@1",
                    "command": "csharpextensions.createApiController"
                },
                {
                    "group": "10_mvc@2",
                    "command": "csharpextensions.createRazorPage"
                },
                {
                    "group": "20_uwp@0",
                    "command": "csharpextensions.createUwpPage"
                },
                {
                    "group": "20_uwp@1",
                    "command": "csharpextensions.createUwpWindow"
                },
                {
                    "group": "20_uwp@2",
                    "command": "csharpextensions.createUwpUserControl"
                },
                {
                    "group": "20_uwp@3",
                    "command": "csharpextensions.createUwpResourceFile"
                },
                {
                    "group": "30_test@0",
                    "command": "csharpextensions.createXUnitTest"
                },
                {
                    "group": "30_test@1",
                    "command": "csharpextensions.createNUnitTest"
                },
                {
                    "group": "30_test@2",
                    "command": "csharpextensions.createMSTest"
                },
                {
                    "group": "40_basics@0",
                    "command": "csharpextensions.createFromTemplate"
                }
            ],
            "explorer/context": [
                {
                    "submenu": "csharpextensions.new",
                    "group": "navigation@-1",
                    "when": "explorerResourceIsFolder"
                }
            ]
        },
        "configuration": {
            "title": "C# Extension",
            "properties": {
                "csharpextensions.templates": {
                    "type": "object",
                    "markdownDescription": "Defines custom templates, based on the custom sections `header`, `construct`, `declaration` and `body`.\n\nMore details in the related documentation on the README file",
                    "required": [
                        "items"
                    ],
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "construct",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the template"
                                    },
                                    "visibility": {
                                        "type": "string",
                                        "description": "Visibility i.e. public, private",
                                        "enum": [
                                            "public",
                                            "private",
                                            "protected",
                                            "internal",
                                            "protected internal",
                                            "private protected"
                                        ]
                                    },
                                    "construct": {
                                        "type": "string",
                                        "description": "supported construct",
                                        "enum": [
                                            "class",
                                            "struct",
                                            "interface"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Describes the template"
                                    },
                                    "header": {
                                        "type": "string",
                                        "description": "Used to define all the necessary imports. The namespace will be automatically generated, must be not definied"
                                    },
                                    "declaration": {
                                        "type": "string",
                                        "description": "class or interfaces (extended or implemented) or any other declaration after the name. Colon will always pre-pended"
                                    },
                                    "body": {
                                        "type": "string",
                                        "description": "All that is relevant for the body definition. i.e. members, methods, properties, etc."
                                    }
                                }
                            }
                        }
                    }
                },
                "csharpextensions.privateMemberPrefix": {
                    "type": "string",
                    "default": "",
                    "description": "Prefix for generated private member declarations"
                },
                "csharpextensions.useThisForCtorAssignments": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether or not a ctor assignment of a property or variable should be prefixed with this."
                },
                "csharpextensions.reFormatAfterChange": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, the document will be reformatted after codeactions are used."
                },
                "csharpextensions.usings.include": {
                    "type": "boolean",
                    "default": true,
                    "description": "If created classes should include default usings."
                },
                "csharpextensions.usings.implicit": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "If created classes should exclude implicit usings. Only applies when a project's `ImplicitUsings` has been set to `enabled`, and when `#csharpextensions.usings.include#` is set to `true`."
                },
                "csharpextensions.useFileScopedNamespace": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use file scoped namespace in .NET 6.0+ projects."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./ && webpack --mode production",
        "compile": "tsc -p ./ && yarn lint",
        "compileDev": "tsc -p ./ && yarn lint && webpack --mode development",
        "watch": "tsc -watch -p ./",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js",
        "package": "vsce package --yarn",
        "publish": "vsce publish --yarn"
    },
    "devDependencies": {
        "@types/glob": "^7.1.3",
        "@types/lodash": "^4.14.175",
        "@types/mocha": "^8.0.4",
        "@types/node": "^12.11.7",
        "@types/sinon": "^10.0.13",
        "@types/vscode": "^1.84.0",
        "@types/xml2js": "^0.4.9",
        "@typescript-eslint/eslint-plugin": "^6.10.0",
        "@typescript-eslint/parser": "^6.10.0",
        "@vscode/test-electron": "^2.3.6",
        "@vscode/vsce": "^2.22.0",
        "eslint": "^7.19.0",
        "glob": "^7.1.6",
        "mocha": "^8.2.1",
        "sinon": "^15.0.1",
        "ts-loader": "^9.5.0",
        "typescript": "^5.2.2",
        "webpack": "^5.75.0",
        "webpack-cli": "^5.0.0"
    },
    "dependencies": {
        "find-up-glob": "^1.0.0",
        "lodash": "^4.7.0",
        "xml2js": "^0.4.23"
    }
}
